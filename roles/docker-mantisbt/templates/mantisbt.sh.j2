#!/bin/bash

set -e

# *****************************************************************************
# Variables used in the backup/restore scripts

MANTISBT_CONTAINER_NAME='{{ mantisbt_container_name }}'
MANTISBT_DB_CONTAINER_NAME='{{ mantisbt_db_container_name }}'
MANTISBT_DB_DV_NAME='{{ mantisbt_db_dv_name }}'
HOST_MANTISBT_RESTORE_DIR='{{ mantisbt_docker_restore_dir }}'
HOST_MANTISBT_BACKUP_DIR='{{ mantisbt_docker_backup_dir }}'
DATABASE_BACKUP_FILE='{{ mantisbt_database_backup_file }}'
DATABASE_FILES_TABLE_BACKUP_FILE='{{ mantisbt_database_files_table_backup_file }}'
MANTISBT_DB_DB_NAME='{{ mantisbt_database_name }}'
MANTISBT_DB_ADMIN='root'
MANTISBT_DB_ADMIN_PASS='{{ mantisbt_db_root_password }}'

# ************************************************************
# check state before performing
case ${1} in
    backup)
        [[ -f ${HOST_MANTISBT_BACKUP_DIR}${DATABASE_FILES_TABLE_BACKUP_FILE} ]] && \
            rm -f ${HOST_MANTISBT_BACKUP_DIR}${DATABASE_FILES_TABLE_BACKUP_FILE}
        [[ -f ${HOST_MANTISBT_BACKUP_DIR}${DATABASE_BACKUP_FILE} ]] && \
            rm -f ${HOST_MANTISBT_BACKUP_DIR}${DATABASE_BACKUP_FILE}
        ;;

    restore)
        if [[ ! -f ${HOST_MANTISBT_RESTORE_DIR}${DATABASE_FILES_TABLE_BACKUP_FILE} ]] && \
           [[ ! -f ${HOST_MANTISBT_RESTORE_DIR}${DATABASE_BACKUP_FILE} ]]; then
            printf >&2 'ERROR: The MantisBT files to restore was not found!\n'
            exit 1
        fi
        ;;

    *)
        echo >&2 "Usage:"
        echo >&2 "  mantisbt.sh <backup | restore>"
        echo >&2 ""
        exit 0
        ;;
esac

case ${1} in
    backup)
        printf >&2 '==> Lock MantisBT\n    '
        docker exec "${MANTISBT_CONTAINER_NAME}" /docker-entrypoint.sh lock

        printf >&2 '==> Backing up MantisBT database (files table)\n    '
        docker exec "${MANTISBT_DB_CONTAINER_NAME}" \
            mysqldump \
                --host=localhost \
                --user="${MANTISBT_DB_ADMIN}" \
                --password="${MANTISBT_DB_ADMIN_PASS}" \
                --add-drop-table \
                --flush-privileges \
                --hex-blob \
                --skip-extended-insert \
                --tz-utc \
                --default-character-set=utf8 \
                ${MANTISBT_DB_DB_NAME} mantis_bug_file_table \
                    > ${HOST_MANTISBT_BACKUP_DIR}${DATABASE_FILES_TABLE_BACKUP_FILE}

        printf >&2 '==> Backing up MantisBT database (remaining tables)\n    '
        docker exec "${MANTISBT_DB_CONTAINER_NAME}" \
            mysqldump \
                --host=localhost \
                --user="${MANTISBT_DB_ADMIN}" \
                --password="${MANTISBT_DB_ADMIN_PASS}" \
                --add-drop-table \
                --flush-privileges \
                --hex-blob \
                --skip-extended-insert \
                --ignore-table=${MANTISBT_DB_DB_NAME}.mantis_bug_file_table \
                --tz-utc \
                --default-character-set=utf8 \
                ${MANTISBT_DB_DB_NAME} \
                    > ${HOST_MANTISBT_BACKUP_DIR}${DATABASE_BACKUP_FILE}

        printf >&2 '==> Unlocking MantisBT\n    '
        docker exec ${MANTISBT_CONTAINER_NAME} /docker-entrypoint.sh unlock

        printf >&2 '==> Finished running script\n'
        ;;

    restore)
        printf >&2 '==> Stop MantisBT during restore\n    '
        docker stop "${MANTISBT_CONTAINER_NAME}"

        printf >&2 '==> Restore MantisBT database (files table)\n    '
        docker exec -i "${MANTISBT_DB_CONTAINER_NAME}" \
            mysql \
                --host=localhost \
                --user="${MANTISBT_DB_ADMIN}" \
                --password="${MANTISBT_DB_ADMIN_PASS}" \
                ${MANTISBT_DB_DB_NAME} < \
                    ${HOST_MANTISBT_RESTORE_DIR}${DATABASE_FILES_TABLE_BACKUP_FILE}

        printf >&2 '==> Restore MantisBT database (remaining tables)\n    '
        docker exec -i "${MANTISBT_DB_CONTAINER_NAME}" \
            mysql \
                --host=localhost \
                --user="${MANTISBT_DB_ADMIN}" \
                --password="${MANTISBT_DB_ADMIN_PASS}" \
                ${MANTISBT_DB_DB_NAME} < \
                    ${HOST_MANTISBT_RESTORE_DIR}${DATABASE_BACKUP_FILE}

        printf >&2 '==> Restart MantisBT\n    '
        docker restart "${MANTISBT_CONTAINER_NAME}"

        printf >&2 '==> Finished running script\n'
        ;;
esac

# ************************************************************
# restart the docker container
# docker restart ${MANTISBT_CONTAINER_NAME}

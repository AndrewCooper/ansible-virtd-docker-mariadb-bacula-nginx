---

- name: Check if the bacula user ssh key exists
  stat:
    path: '{{ bacula_home_dir }}/.ssh/id_rsa'
    get_checksum: False
    get_md5: False
  register: st_bacula_key

- name: Ensure the groups for bacula user exist
  group:
    name: '{{ item }}'
    system: yes
    state: present
  loop:
    - bacula
    - docker
    - tape

- name: Add bacula user to groups
  user:
    append: yes
    create_home: yes
    generate_ssh_key: yes
    group: bacula
    groups:
      - docker
      - tape
    home: '{{ bacula_home_dir }}'
    name: bacula
    password: '!'
    ssh_key_bits: 4096
    ssh_key_comment: "from: bacula@{{ ansible_facts.fqdn }} to: git@github.com"
    ssh_key_type: rsa
    state: present

- name: make dir - {{ bacula_home_dir }}/.ssh/
  file:
    path: '{{ bacula_home_dir }}/.ssh/'
    owner: bacula
    group: bacula
    mode: 'u=rwx,g=,o='
    state: directory

- name: template - {{ bacula_home_dir }}/.ssh/config
  template:
    src: ssh-config.j2
    dest: '{{ bacula_home_dir }}/.ssh/config'
    mode: 'u=rw,g=,o='
    owner: bacula
    group: bacula
    force: no

- name: touch - {{ bacula_home_dir }}/.ssh/known_hosts
  file:
    path: '{{ bacula_home_dir }}/.ssh/known_hosts'
    state: touch
    mode: 'u=rw,g=rw,o='
    owner: bacula
    group: bacula

- name: Read public key
  command: cat '{{ bacula_home_dir }}/.ssh/id_rsa.pub'
  register: bacula_key
  changed_when: false

- debug:
    var: bacula_key.stdout_lines[0]

- name: Verify or install public key
  pause:
    prompt: "Verify or install the bacula@{{ ansible_facts.fqdn }} key for the bacula user ({{ bacula_home_dir }}/.ssh/id_rsa.pub)"
  when: st_bacula_key.stat.exists == False

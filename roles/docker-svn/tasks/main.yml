---
# file: roles/docker-svn/tasks/main.yaml

- name: docker_container.conf dir
  file:
    state: directory
    path: '{{ docker_restore_config_base_dir }}/{{ svn_dv_name }}'
    owner: root
    group: root
    mode: 'u=rwx,g=rx,o=rx'
    recurse: no

# *****************************************************************************
# backup script part

- name: Assemble dir for backup scripts
  file:
    path: '{{ bacula_scripts_assembly_dir }}'
    state: directory

- name: Create before_backup script
  template:
    src: before_backup.j2
    dest: '{{ bacula_scripts_assembly_dir }}/55.before_backup.svn'

- name: Create after_backup script
  template:
    src: after_backup.j2
    dest: '{{ bacula_scripts_assembly_dir }}/55.after_backup.svn'

# *****************************************************************************
# update the Docker restore config

- name: exists - state file
  stat:
    path: '{{ docker_restore_config_base_dir }}/{{ svn_dv_name }}/restore.date.txt'
    get_checksum: False
    get_md5: False
  register: st_svn_restore

# *****************************************************************************
# Update or make the image.
- name: Deploy Image Source
  synchronize:
    archive: yes
    checksum: yes
    compress: yes
    src: '{{ svn_image_repo }}/'
    dest: '{{ docker_projects_dir }}/docker-svn/'
  register: deploy_source

- name: build image
  docker_image:
    build:
      path: '{{ docker_projects_dir }}/docker-svn'
      pull: yes
    name: '{{ svn_image_name }}'
    tag: '{{ docker_image_tag }}'
    source: build
    force_source: "{{ deploy_source.changed }}"

# *****************************************************************************
# Create the data volumes

- name: data-volume container
  docker_volume:
    name: '{{ svn_dv_name }}'

# *****************************************************************************
# Start the data container running

- name: start container
  docker_container:
    comparisons: {'*': strict}
    detach: true
    env:
      APACHE_DOCUMENT_ROOT: "/var/www/html/"
      APACHE_LOG_DIR: "/tmp"
      LDAP_URL: "ldap://{{openldap_container_name}}/ou=user,dc=novatech?uid?sub?(objectClass=Person)"
      LDAP_BIND_DN: "cn=proxyagent,dc=novatech"
      LDAP_BIND_PW: '{{ openldap_proxyagent_password }}'
      LDAP_GROUP_DN: "cn=svn.novatech-llc.com,ou=group,dc=novatech"
      SVN_BASE_DIR: "/var/lib/svn"
      SVN_HOSTNAME: '{{ svn_hostname }}'
    hostname: '{{ svn_container_name }}'
    image: '{{ svn_image_name }}:{{ docker_image_tag }}'
    name: '{{ svn_container_name }}'
    networks:
      - name: '{{ docker_network_frontend }}'
        aliases:
          - '{{ svn_hostname }}'
    ports: '{{ svn_port_args }}'
    purge_networks: true
    restart_policy: '{{ docker_restart_policy }}'
    volumes:
      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
      - '{{ svn_dv_name }}:/var/lib/svn:z'

# *****************************************************************************
# restore?

- include_tasks: restore.yml
  when: st_svn_restore.stat.exists == False

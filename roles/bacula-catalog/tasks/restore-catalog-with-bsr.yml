---
- name: Check for Bacula catalog bootstrap file
  stat:
    path: '{{ bacula_bootstrap_dir }}/BackupCatalog.bsr'
  register: p

- name: Copy Bacula catalog bootstrap file
  copy:
    src: BackupCatalog.bsr
    dest: '{{ bacula_bootstrap_dir }}/BackupCatalog.bsr'
    owner: bacula
    group: bacula
    mode: 0644
  when: p.stat.exists is undefined or p.stat.exists == False

- name: Stop bacula-sd service
  service:
    name: bacula-sd
    state: stopped

- name: Create temp directory for restore
  tempfile:
    state: directory
    prefix: bacula-catalog-restore.
  register: restore_tmp_dir

- name: Extract catalog from tape
  command: >
    /usr/sbin/bextract
    -b '{{ bacula_bootstrap_dir }}/BackupCatalog.bsr'
    '{{ bacula_storage_device_archive_device }}'
    '{{ restore_tmp_dir.path }}'
  changed_when: true

- name: Find restored catalog files
  find:
    path: '{{ restore_tmp_dir.path }}'
    patterns: bacula.sql
  register: catalog_files

- name: Copy catalog to file storage
  copy:
    remote_src: yes
    src: '{{ item }}'
    dest: '{{ bacula_catalog_dir }}'
  loop: '{{ catalog_files.files }}'

- name: Start bacula-sd service
  service:
    name: bacula-sd
    state: started

- name: Stop bacula-dir service
  service:
    name: bacula-dir
    state: stopped

- name: Restore Bacula catalog from file
  mysql_db:
    name: bacula
    state: import
    target: '{{ restore_tmp_dir.path }}{{ bacula_catalog_dir }}/bacula.sql'

- name: Start bacula-dir service
  service:
    name: bacula-dir
    state: started

- name: Delete temp directory
  file:
    path: '{{ restore_tmp_dir.path }}'
    state: absent

---
# Available Tags:
#   prompts
#   svn_checkout
#   dump_live_system
#   git_docker_checkout
#   gen_ssl
#   docker_build_image
#   import_sql

- name: Build Docker Support Site Containers for development and testing
  hosts: localhost
  sudo: True

  vars:
    svn_username:               '{{ lookup("file",     playbook_dir + "/personal_credentials/svn/username") }}'
    svn_password:               '{{ lookup("file",     playbook_dir + "/personal_credentials/svn/password") }}'
    supportsite_mysql_password: '{{ lookup("file",     playbook_dir + "/credentials/buildsystem.novatech-llc.com/database/root") }}'

    container_data_directory: "~/Workbench/Dev_Build_Support_Data"
    external_port_www: 80
    external_port_www_https: 443
    extermal_port_www_django: 8000
    external_port_mysql: 3306
    test_db_password: testing_password
    supportsite_database_name: protocol
    docker_name_prefix: "dev_"

    support_site_docker_repos:
      SupportSite_database_server:
        dir_name: docker-SupportSite_database_server
        url: https://git.novatech-llc.com/NovaTech-Testing/docker-SupportSite_database_server.git
      SupportSite_http_server:
        dir_name: docker-SupportSite_http_server
        url: https://git.novatech-llc.com/NovaTech-Testing/docker-SupportSite_http_server.git

  tasks:
  - pause:
      prompt: "To run this playbook a ssh keys to \n\twww.novatech-llc.com (support.novatech-llc.com)\n\tdocker.support.novatech-llc.com (docker container with no pass unless the 'dump_live_system' tags are skipped)\n\n(Hit 'Enter' to continue)"
    tags:
      - prompts
  - pause:
      prompt: "To run this playbook the following need to be installed: \n\tdocker\n\tpython-docker\n\tmysql (export/import data)\n\trsync (dump live)\n\tpysvn (svn checkout)\n\n(Hit 'Enter' to continue)"
    tags:
      - prompts
  - pause:
      prompt: "The following service(s) need to be running: \n\tdocker\n\n(Hit 'Enter' to continue)"
    tags:
      - prompts

  - assert:
      that:
        - "svn_username != ''"
        - "svn_password != ''"
    tags:
      - svn_checkout
  - assert:
      that:
        - "supportsite_mysql_password != ''"
    tags:
      - dump_live_system

  #------------------------------------------------------------------------------------------------------------------
  # Setup of base directories.
  - name: Make directory to contain data for containers
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}"
      state: directory
  - name: Make a build system folder
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}/SupportSite"
      state: directory

  #------------------------------------------------------------------------------------------------------------------
  # Setup ncd zip folder.
  - name: Make a ss ncd zip folder
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}/SupportSite/ncd_zip"
      state: directory

  #-----------------------------------------------------------------------------------------------------------------
  # Setup ncd release folder
  - name: Make a ss ncd release folder
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}/SupportSite/ncd_release"
      state: directory
  - name: Gathering NCD Release files
    ncdrelease:
      svn_username: "{{ svn_username }}"
      svn_password: "{{ svn_password }}"
      ncd_release_repo: "https://svn.novatech-llc.com/NCD_Release"
      local_checkout_dir: "{{ container_data_directory | expanduser }}/SupportSite/ncd_release/"
      releases_status_logfile: "{{ container_data_directory | expanduser }}/SupportSite/ncd_repo_status"
    tags:
      - svn_checkout

  #------------------------------------------------------------------------------------------------------------------
  # Setup download folder
  - name: Make a ss download folder
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}/SupportSite/downloads"
      state: directory
  - name:  Syncronizing download files to local system
    sudo: false
    command: "rsync -vahdO docker.support.novatech-llc.com:/opt/downloads/* {{ container_data_directory | expanduser }}/SupportSite/downloads/"
    tags:
      - dump_live_system

  #------------------------------------------------------------------------------------------------------------------
  # Get docker files from git
  - name: Remove any old repo files
    sudo: false
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}/{{ item.value.dir_name }}"
      state: absent

    with_dict: "{{ support_site_docker_repos }}"
    tags:
      - git_docker_checkout
  - name: Clone Git repos
    sudo: false
    git:
      repo: "{{ item.value.url }}"
      dest: "{{ container_data_directory | expanduser }}/{{ item.value.dir_name }}"
      force: yes
    with_dict: "{{ support_site_docker_repos }}"
    tags:
      - git_docker_checkout

  #------------------------------------------------------------------------------------------------------------------
  # Setup the supportsite database server
  - name: Make a ss database folder
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}/SupportSite/mysql"
      state: directory
  - name: Setting db root user password, for the ss docker container
    replace:
      dest: "{{ container_data_directory | expanduser }}/{{ support_site_docker_repos.SupportSite_database_server.dir_name }}/Dockerfile"
      regexp: '(ENV\s+MYSQL_ROOT_PASSWORD\s+).*'
      replace: '\1 {{ test_db_password }}'
  - name: Setting db name, for the ss docker container
    replace:
      dest: "{{ container_data_directory | expanduser }}/{{ support_site_docker_repos.SupportSite_database_server.dir_name }}/Dockerfile"
      regexp: '(ENV\s+MYSQL_DATABASE\s+).*'
      replace: '\1 {{ test_db_password }}'
  - name: Build docker image ----- Support Site database server
    docker_image:
      name: "{{ docker_name_prefix }}supportsite_database_server_image"
      path: "{{ container_data_directory | expanduser }}/{{ support_site_docker_repos.SupportSite_database_server.dir_name }}"
      state: "build"
    tags:
      - docker_build_image
  - name: Start docker container - Support Site database server
    docker:
      detach: True
      image: "{{ docker_name_prefix }}supportsite_database_server_image"
      name: "{{ docker_name_prefix }}SupportSite_database_server"
      ports: "{{ external_port_mysql }}:3306"
      state: "restarted"
      restart_policy: "no"
      volumes:
      - "{{ container_data_directory | expanduser }}/SupportSite/mysql:/var/lib/mysql:rw"

  #------------------------------------------------------------------------------------------------------------------
  # Setup the support site ssl files
  - name: Comment out ssl config
    replace:
      dest: "{{ container_data_directory | expanduser }}/{{ support_site_docker_repos.SupportSite_http_server.dir_name }}/config_files/CustomerSupportSite.conf"
      regexp: '(^\s*)(SSLCA.*)'
      replace: '\1# \2'
  - name: Comment out more ssl config
    replace:
      dest: "{{ container_data_directory | expanduser }}/{{ support_site_docker_repos.SupportSite_http_server.dir_name }}/config_files/CustomerSupportSite.conf"
      regexp: '(^\s*)(SSLCertificateChainFile.*)'
      replace: '\1# \2'
  - name: Make ssl folder
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}/SupportSite/ssl/etc/ssl/private/"
      state: directory
    tags:
    - gen_ssl
  - name: Make site ssl key and crt
    command: openssl req -x509 -nodes -newkey rsa:2048 -keyout {{ container_data_directory | expanduser }}/SupportSite/ssl/etc/ssl/private/apache2.key -out {{ container_data_directory | expanduser }}/SupportSite/ssl/etc/ssl/private/apache2.crt -subj '/CN=test-support.novatech-llc.com/O=NovaTech/OU=Orion/C=US/ST=Kansas/L=Lenexa'
    tags:
    - gen_ssl
  - name: Tar ssl files
    command: tar -cv -f {{ container_data_directory | expanduser }}/{{ support_site_docker_repos.SupportSite_http_server.dir_name }}/openssl.tar -C  {{ container_data_directory | expanduser }}/SupportSite/ssl/ .
    tags:
    - gen_ssl

  #------------------------------------------------------------------------------------------------------------------
  # Setup the support site http server
  - name: Make a ss web code folder
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}/SupportSite/django"
      state: directory
  - name: Make a ss users folder
    file:
      mode: 0777
      path: "{{ container_data_directory | expanduser }}/SupportSite/users"
      state: directory
  - name: Build docker image ----- Support Site http server
    docker_image:
      name: "{{ docker_name_prefix }}supportsite_http_server_image"
      path: "{{ container_data_directory | expanduser }}/{{ support_site_docker_repos.SupportSite_http_server.dir_name }}"
      state: "build"
    tags:
      - docker_build_image
  - name: Start docker container - Support Site http server
    docker:
      detach: True
      image: "{{ docker_name_prefix }}supportsite_http_server_image"
      links: "{{ docker_name_prefix }}SupportSite_database_server:support_site_mysql_server"
      name: "{{ docker_name_prefix }}SupportSite_http_server"
      ports:
      - "{{ external_port_www }}:80"
      - "{{ external_port_www_https }}:443"
      - "{{ extermal_port_www_django }}:8000"
      state: "restarted"
      restart_policy: "no"
      volumes:
      - "{{ container_data_directory | expanduser }}/SupportSite/users:/opt/user_directory:rw"
      - "{{ container_data_directory | expanduser }}/SupportSite/django:/opt/supportsite:rw"
      - "{{ container_data_directory | expanduser }}/SupportSite/ncd_zip:/opt/zip_temp_files:rw"
      - "{{ container_data_directory | expanduser }}/SupportSite/ncd_release:/opt/ncd_release:rw"
      - "{{ container_data_directory | expanduser }}/SupportSite/downloads:/opt/downloads:rw"

  #------------------------------------------------------------------------------------------------------------------
  # Setup supportsite database
  - name: Dump mysql data from supportsite
    sudo: false
    shell: ssh docker.support.novatech-llc.com 'mysqldump --host=SupportSite_database_server --user=root --password={{ supportsite_mysql_password }} --all-databases --events --triggers --result-file=/tmp/supportsite_backup.sql'
    tags:
      - dump_live_system
  - name: Copy mysql data dump from supportsite
    sudo: false
    shell: scp docker.support.novatech-llc.com:/tmp/supportsite_backup.sql {{ container_data_directory | expanduser }}/SupportSite/mysql_dump.sql
    tags:
      - dump_live_system
  - name: Load dump file into test supportsite
    shell: mysql --host=0.0.0.0 --user=root --port={{ external_port_mysql }} --password={{ test_db_password }} < {{ container_data_directory | expanduser }}/SupportSite/mysql_dump.sql
    tags:
      - import_sql
  - name: Update root user password after import
    shell: mysql --host=0.0.0.0 --user=root --port={{ external_port_mysql }} --password={{ test_db_password }} -e'SET PASSWORD FOR root = PASSWORD("{{ test_db_password }}");'
    tags:
      - import_sql
  - name: Restart mysql server after import
    shell: docker restart {{ docker_name_prefix }}SupportSite_database_server
